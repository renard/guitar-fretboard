%%

%% Copyright © 2018 by Sébastien Gross <seb -at- chezwam -dot- org>

%% This program is free software. It comes without any warranty, to the extent
%% permitted by applicable law. You can redistribute it and/or modify it under
%% the terms of the Do What The Fuck You Want To Public License, Version 2, as
%% published by Sam Hocevar. See http://sam.zoy.org/wtfpl/COPYING for more
%% details.

%% This file may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License, either version 1.3c of this license
%% or (at your option) any later version. The latest version of this
%% license is in:

%% http://www.latex-project.org/lppl.txt

%% and version 1.3c or later is part of all distributions of LaTeX
%% version 2006/05/20 or later.


\def\fbfileversion{1.0}
\def\fbfiledate{2018/10/28}


\ProvidesPackage{guitar-fretboard}[\fbfiledate\space (v\fbfileversion)]
\NeedsTeXFormat{LaTeX2e}


%% Include all required packages
\RequirePackage{tikz}
\usetikzlibrary{shapes,positioning,calc,shapes.multipart,backgrounds}
\RequirePackage{xcolor}
\RequirePackage{ifthen}
\RequirePackage{xspace}
\RequirePackage{fontspec}
\RequirePackage{lilyglyphs}
\RequirePackage{pdftexcmds}
\RequirePackage{etoolbox}
\RequirePackage{adjustbox}

%% \usepackage[minimal]{leadsheets}
%% \useleadsheetslibraries{chords,musicsymbols}
%% \usepackage[full]{leadsheets}
%% \useleadsheetslibraries{musicsymbols}
\RequirePackage{xparse,expl3}

\makeatletter

\pgfkeys{/tikz/.cd,
  % Execute style
  @es/.style = {#1},
  % Execute macro
  @em/.style = {@es/.expand once=#1}
}


%\newfontfamily\notefont{Noto Sans Display Medium}

% Some default values
\tikzset{
  fretboard/.style = {yscale=-1.3,xscale=2.6,
    background rectangle/.style={fill=white}, show background rectangle},
  legend/.style = { anchor=center, align=center,font=\Huge },
  legend position chord/.style = {shift = {(-1.5, 0)} },
  legend position/.style = {shift = {(0,1.5)} },
  fret/.style = {  line width = 2pt, },
  string/.style = {  },
  fret numbers/.style = {font=\Large },
  overlay/.style = { color=white, opacity=0.85},
  note/.style = {
    circle,
    inner sep = 0.2em,
    draw,
    align=center,
    minimum size=3.4em,
    fill = white,
    font=\huge,
  },
  split note/.style = {
    circle split,
    font=\large,
  },
  note highlight/.style = {draw=red, line width=3pt},
  note shade/.style = {fill = white, opacity=0.85, text = black!30,
    draw=black!20,
  },
  string tuning/.style = {
    rotate=90,
    anchor=center,
    align=center,
    font=\LARGE,
  },
  %% transformations should be done in a separate scope
  string tuning position/.style = {
    shift = {(-0.65, 1)},
  },
  chord/.style = {
    rotate=90,
  },
}


%% Define the keys
\newif\iffb@fret@numbers@visible
\newif\iffb@transpose@pitch
\newif\iffb@show@tuning
\newif\iffb@chord

\pgfkeys{
  /fb/.cd,
  fretboard/.store in = \fb@fretboard@style,
  fretboard,
  scale/.initial = 0.3,
  frets min/.initial = 0,
  frets max/.initial = 12,
  frets before/.initial = 0,
  frets after/.initial = 0,
  frets offset/.initial = 0.5,
  %
  tuning/.initial = {4, 9, 2, 7, 11, 4},
  tuning style/.store in = \fb@tuning@style,
  tuning style,
  show tuning/.is if = fb@show@tuning,
  show tuning = true,
  %
  transpose/.initial = 0,
  transpose pitch/.is if = fb@transpose@pitch,
  transpose pitch = false,
  %
  chord/.is if = fb@chord,
  chord = false,
  chord style/.store in = \fb@chord@style,
  chord style,
  %
  string/.store in = \fb@string@style,
  string,
  %
  string width/.initial = 0.5pt,
  string factor/.initial = 0.75pt,
  %
  fret/.store in = \fb@fret@style,
  fret,
  %
  fret numbers/.store in = \fb@fret@numbers@style,
  fret numbers,
  fret numbers position/.initial = 0.75,
  %
  fret numbers visible/.is if = fb@fret@numbers@visible,
  fret numbers visible = false,
  %
  note/.store in = \fb@note@style,
  note,
  %
  split note/.store in = \fb@split@note@style,
  split note,
  %
  highlight note/.store in = \fb@note@highlight@style,
  highlight note,
  %
  overlay/.store in = \fb@overlay@style,
  overlay,
  %
  legend text/.initial = {},
  legend/.store in = \fb@legend@style,
  legend,
}

%% Computes the length of given array.
%
% #1 - macro to store #2 length
% #2 - The array
%
% Taken from https://tex.stackexchange.com/questions/66121
\def\getlen#1#2{%
  \pgfmathsetmacro{\lenarray}{0}% 
  \foreach \i in #2{%
    \pgfmathtruncatemacro{\lenarray}{\lenarray+1}%
    \global\let\lenarray\lenarray%
  }%
  \let#1=\lenarray%
}%


%% Evaluates an expression and stores it in a macro
%
% #1 destination macro
% #2 a math expression
\def\pgfmatheval#1#2{%
  \pgfmathparse{#2}%
  \let#1=\pgfmathresult%
}%

\def\@pitches{"C","CS","D","Eb","E","F","FS","G","GS","A","Bb","B"}
\newcommand{\transposepitch}[2]{%
  \pgfmatheval{\newpitch}{array({\@pitches},
    Mod(\pgfkeysvalueof{/notes/#1/semitones}+#2,12))}
}%


\newenvironment{fb}[1][]{%

  \pgfkeys{/fb/.cd, #1}%

  %% compute some values
  \pgfmathtruncatemacro{\fb@canvas@x@min}{
    \pgfkeysvalueof{/fb/frets min} - \pgfkeysvalueof{/fb/frets before}}
  \pgfmathtruncatemacro{\fb@canvas@x@max}{
    \pgfkeysvalueof{/fb/frets max} + \pgfkeysvalueof{/fb/frets after}}
  \pgfmathtruncatemacro{\fb@canvas@x@max@plusone}{\fb@canvas@x@max+1}


  \def\@@rotate{0}
  \tikzset{ @@chord/.style = {}, }
  \iffb@chord
  \def\@@rotate{-90}%
  \tikzset{@@chord/.append style = {
      chord, @em=\fb@chord@style,
    }
  }
  \fi

  
  % String list
  \edef\fb@strings{\pgfkeysvalueof{/fb/tuning}}
  \getlen{\fb@strings@count}{\fb@strings}
  \begin{adjustbox}{rotate=\@@rotate,scale={\pgfkeysvalueof{/fb/scale}}}
  \begin{tikzpicture} [fretboard, @em=\fb@fretboard@style]

    
    % Draw the frets and put fret number
    \foreach \fret [count=\@ifret from \fb@canvas@x@min]
    in {\fb@canvas@x@min,...,\fb@canvas@x@max@plusone}{%
      \pgfmatheval{\@fret}{\fret-\pgfkeysvalueof{/fb/frets offset}}
      \draw [fret, @em=\fb@fret@style] (\@fret,1) -- (\@fret,\fb@strings@count);
      % Do not draw last fret number
      \iffb@fret@numbers@visible{%
        \ifnum\fret < \fb@canvas@x@max@plusone{%
          \node[fret numbers, @em=\fb@fret@numbers@style,@@chord] at
          (\@ifret,\fb@strings@count+\pgfkeysvalueof{/fb/fret numbers position})
               {\@ifret};
        }\fi
      }\fi
    }

    % Draw the strings
    \foreach \is in {1,...,\fb@strings@count} {
      \draw[string, @em=\fb@string@style,
        line width=\pgfkeysvalueof{/fb/string width} +
        \is*\pgfkeysvalueof{/fb/string factor}]
      (\fb@canvas@x@min-\pgfkeysvalueof{/fb/frets offset}, \is) --
      (\fb@canvas@x@max@plusone-\pgfkeysvalueof{/fb/frets offset}, \is);
    }
    
}{

  % Draw the opacity mask
  \fill [overlay,@em=\fb@overlay@style]
  (\fb@canvas@x@min-\pgfkeysvalueof{/fb/frets offset}-0.07,0)
  rectangle
  (\pgfkeysvalueof{/fb/frets min}-\pgfkeysvalueof{/fb/frets offset}-0.07, \fb@strings@count+1);

  \fill [overlay,@em=\fb@overlay@style]
  (\fb@canvas@x@max+\pgfkeysvalueof{/fb/frets offset}+0.07,0)
  rectangle
  (\pgfkeysvalueof{/fb/frets max}+\pgfkeysvalueof{/fb/frets offset}+0.07, \fb@strings@count+1);

  %% Add a legend
  \expandafter\notblank\expandafter{\pgfkeysvalueof{/fb/legend text}}{%
    \iffb@chord
    \node[legend position chord] (l) at (\fb@canvas@x@min-\pgfkeysvalueof{/fb/frets offset}, 1) {};
    \node[legend position chord] (r) at (\fb@canvas@x@min-\pgfkeysvalueof{/fb/frets offset}, \fb@strings@count) {};
    \else
    \node[legend position] (l) at (\fb@canvas@x@min, 1) {};
    \node[legend position] (r) at (\fb@canvas@x@max, 1) {};
    \fi
    \node[legend,@em=\fb@legend@style,@@chord] at ($(l)!0.5!(r)$) {\pgfkeysvalueof{/fb/legend text}};
  }%

  \iffb@show@tuning
  \begin{scope}[string tuning position]
  \foreach \s [count = \is ] in \fb@strings {
    \node[string tuning, @em=\fb@tuning@style]
    at (\fb@canvas@x@min, \fb@strings@count-\is ) {%
      \pgfmathparse{array({\@pitches}, Mod(\s,12))}%
      \pgfkeysvalueof{/notes/\pgfmathresult/text}%
    };
  }
  \end{scope}
  \fi

  \end{tikzpicture}
  \end{adjustbox}
}



\newif\iffb@note@haslower


\newcommand{\@definenote}[1]{
  \expandafter\newif\csname iffb@note@#1@shade\endcsname
  \expandafter\newif\csname iffb@note@#1@lower\endcsname
  \expandafter\newif\csname iffb@note@#1@highlight\endcsname
  \pgfkeys{
    /notes/#1/.cd,
    semitones/.initial = 0,
    text/.initial = #1,
    lower text/.initial =,
    limit/.initial = \pgfkeys@empty,
    style/.style = {},
    style/.append style={##1},
    split style/.style = {},
    split style/.append style={##1},
    highlight style/.style = {},
    highlight style/.append style={##1},
    highlight/.is if = fb@note@#1@highlight,
    highlight = false,
    lower/.is if = fb@note@#1@lower,
    lower = false,
    shade/.is if = fb@note@#1@shade,
    shade = false,
  }
}

\newcommand{\newnote}[2][]{
  \@definenote{#2}
  \pgfkeys{
    /notes/#2/.cd,
    #1
  }
}

\newcommand{\copynote}[3][]{
  \@definenote{#3}
  %% \foreach \k in {text}{%
  %%   \pgfkeyslet{/notes/#3/\k}{\pgfkeysvalueof{/notes/#2/\k}}
  %% }
  \pgfkeys{
    /notes/#3/.cd,
    semitones/.initial = \pgfkeysvalueof{/notes/#2/semitones},
    text/.initial = #3,
    lower text/.initial = \pgfkeysvalueof{/notes/#2/lower text},
    lower = \iftrue\csname iffb@note@#2@lower\endcsname true\else false\fi,
    shade = \iftrue\csname iffb@note@#2@shade\endcsname true\else false\fi,
    style/.style = /notes/#2/style,
    split style/.style = /notes/#2/split style,
    highlight style/.style = /notes/#2/highlight style,
    #1
  }
}


\newcommand{\getnotename}[2]{%
  \iffb@transpose@pitch%
  \pgfkeysvalueof{/notes/\newpitch/#2}%
  \else%
  \pgfkeysvalueof{/notes/#1/#2}%
  \fi%
}%


\newcommand{\@setup@note@style}[2][]{
 \pgfkeys{/notes/#2/.cd, #1}%
  %% Define a dynamic local style to handle several cases (including highlight)
  \tikzset{@@note/.style={note,@em=\fb@note@style,/notes/#2/style, @@chord}}
  %% Check for hightight
  \iftrue\csname iffb@note@#2@highlight\endcsname%
  \tikzset{@@note/.append style = {
      note highlight,
      @em=\fb@note@highlight@style,
      /notes/#2/highlight style}}
  \fi%

  %% Check for lower node
  \iftrue\csname iffb@note@#2@lower\endcsname%
  \iffb@note@haslower
  \tikzset{@@note/.append style = {
      split note,
      @em=\fb@split@note@style,
      /notes/#2/split style}}
  \fi
  \fi%
}

%% Generic low level command to place a note.
%
%  #1 note style override
%  #2 The note to place (as defined with newnote)
%  #3 X
%  #4 Y
%
% You might want use \placenote instead
\newcommand{\@placenote}[4][]{
  %% place the note. Since the split is determined by style, we always place
  %% the lower part.
  \node[@@note] at (#3, #4) {%
    \getnotename{#2}{text}%
    \nodepart[]{lower}\getnotename{#2}{lower text}%
  };
  
  %% If the node should be shaded
  %% https://tex.stackexchange.com/questions/46377
  \iftrue\csname iffb@note@#2@shade\endcsname{%
    \node[@@note, note shade ] at (#3, #4) {
    \getnotename{#2}{text}%
    \nodepart[]{lower}\getnotename{#2}{lower text}%
    };
  }\fi
}

%% Generic high level command to place a note.
%
%  #1 note style override
%  #2 The note to place (as defined with newnote)
%  #3 X
%  #4 Y
%
\newcommand{\placenote}[4][]{
  \tikzset{ @@chord/.style = {}, }
  \@setup@note@style[#1]{#2}
  \@placenote[#1]{#2}{#3}{#4}
}  

\def\newpitch{C}



%% place note #2 on all defined strings.
%%
%% Style #1 is used to override default note style
\newcommand{\note}[2][]{
  \pgfkeys{/notes/#2/.cd, #1}%

  %% \notblank requires a macro and not a command result
  \pgfkeysgetvalue{/notes/#2/lower text}{\@@lower@text}

  %% Do we need to transpose the note?
  \let\newpitch=#2
  \iffb@transpose@pitch  
  \transposepitch{#2}{\pgfkeysvalueof{/fb/transpose}}
  \pgfkeysgetvalue{/notes/\newpitch/lower text}{\@@lower@text}
  \fi
  
  % Check if the lower part is defined for future usage
  \fb@note@haslowerfalse%
  \expandafter\notblank\expandafter{\@@lower@text}{%
    \fb@note@haslowertrue%
  }

  % limit note display
  \edef\note@limit{\pgfkeysvalueof{/notes/#2/limit}}
  \getlen{\note@limit@count}{\note@limit}
  %% Check if a string limit is defined, build a list of all string otherwise.
  \ifnum\note@limit@count >0%
    \edef\@strings@limit{\pgfkeysvalueof{/notes/#2/limit}}
    \else
    \edef\@strings@limit{1,...,\fb@strings@count}
  \fi

  %% Setup note style before looping over strings and octaves
  \@setup@note@style[#1]{#2}


  %% Compute note placement:
  %% X = semitone + transpose - string + octave
  %
  % First compute static parts:
  \pgfmathtruncatemacro{\@base@semitones}{
    %% Add note semitones from C
    \pgfkeysvalueof{/notes/#2/semitones}
    %% Finaly apply a transposition if needed.
    +\pgfkeysvalueof{/fb/transpose}
  }
    
  
  %% \str is the string index
  \foreach \str in \@strings@limit {
    %% Compute note placement:
    %
    % Compute the string part.
    \pgfmathtruncatemacro{\@base@semitones@string}{
      \@base@semitones
      %% Substract the string tuning (Convert string tuning to C).
      -array({\fb@strings},\fb@strings@count-\str)
    }
    \foreach \oct in { -24, -12, 0, 12, 24 } {
      %% Compute note position
      %
      % Add the octave part
      \pgfmathtruncatemacro{\@x}{
        \@base@semitones@string
        %% Add (of remove) octave to cover the whole fretboard 
        +\oct
      }
      \pgfmathparse{(\@x>=\fb@canvas@x@min) && (\@x<=\fb@canvas@x@max)?int(1):int(0)}
      %% If the note if within our fret range
      \ifnum\pgfmathresult>0{%
        \@placenote[#1]{#2}{\@x}{\str}
      }\fi
    }
  }
}


\newif\iffb@color@derive
\pgfkeys{
  /fb/colors/.cd,
  limit/.initial = 0.5,
  model/.initial = HTML,
  derive/.is if = fb@color@derive,
  derive = false,
}

%% #1 /fb/colors
%% #2 color index
%% #3 color definition
\newcommand{\setcolor}[3][]{
  \pgfkeys{/fb/colors/.cd,
    derive = false,
    #1}
  \iffb@color@derive%
  \colorlet{bg#2}{#3}
  \else
  \definecolor{bg#2}{\pgfkeysvalueof{/fb/colors/model}}{#3}
  \fi

  % Compute foreground
  %% https://tex.stackexchange.com/questions/379893
  \extractcolorspecs{bg#2}{\modelspec}{\grayscale}
  \pgfmathparse{(
    array({\grayscale},0)*0.2126+
    array({\grayscale},1)*0.7152+
    array({\grayscale},2)*0.0722)>=\pgfkeysvalueof{/fb/colors/limit}?int(1):int(0)}
  \ifnum\pgfmathresult>0%
  \colorlet{fg#2}{black}
  \else % Less bright
  \colorlet{fg#2}{white}
  \fi
}


\newcommand\notename[1]{\textsf{#1}}
\newcommand\accidental[1]{\hspace*{0.1ex}#1}

\newcommand\msharp{\raisebox{0.5ex}{\scalebox{0.6}{\sharp}}\@ifstar{\accidental{}}{}}
\newcommand\mflat{\raisebox{0.25ex}{\scalebox{0.7}{\flat}}\@ifstar{\accidental{}}{}}

\newcommand\mdoubleflat{\raisebox{0.25ex}{\protect\scalebox{0.7}{\flatflat}}\@ifstar{\accidental{}}{}}
\newcommand\mdoublesharp{\raisebox{0.5ex}{\protect\scalebox{0.7}{\doublesharp}}\@ifstar{\accidental{}}{}}
\newcommand\mnatural{\raisebox{0.45ex}{\protect\scalebox{0.6}{\natural}}\@ifstar{\accidental{}}{}}


\ExplSyntaxOn
\NewDocumentCommand{\p}{m}
 {
  \tl_set:Nn \l_emit_note_tl { #1 }
  \regex_replace_all:nnN { \# } { S } \l_emit_note_tl
  \regex_split:nVN { ([A-G]+) ([Sbn]*) (\d*) } \l_emit_note_tl \l_emit_note_seq
  %% note
  \notename{\seq_item:Nn \l_emit_note_seq { 2 }}
  %% Accidental
  \str_case_x:nn { \seq_item:Nn \l_emit_note_seq { 3 } }
   {
    {S}{\accidental{\msharp}}
    {SS}{\accidental{\mdoublesharp}}
    {SSS}{\accidental{\mdoublesharp}\accidental{\msharp}}
    {b}{\accidental{\mflat}}
    {bb}{\accidental{\mdoubleflat}}
    {bbb}{\accidental{\mdoubleflat\hspace*{-0.05ex}\mflat}}
    {n}{\accidental{\mnatural}}
   }
   %% Variant
  \textsubscript{\seq_item:Nn \l_emit_note_seq { 4 }}\xspace%
 }
\cs_generate_variant:Nn \regex_split:nnN { nVN }
\tl_new:N \l_emit_note_tl
\seq_new:N \l_emit_note_seq
\ExplSyntaxOff

%% Define note shortcuts
\@for\i:={A,B,C,D,E,F,G}\do{%
  \@for\j:={bbb,bb,b,,n,S,SS,SSS}\do{
    \expandafter\xdef\csname p\i\j\endcsname{\p{\i\j}}%
}}

\makeatother

\setcolor{1}{000000}      
\setcolor[derive]{1b} {bg1!10}
\setcolor[derive]{1bb}{bg1b!10}
\setcolor[derive]{1s} {bg1!10}
\setcolor[derive]{1ss}{bg1s!10}


\setcolor{2}{377EB8}
\setcolor[derive]{2b} {bg2!70!black}
\setcolor[derive]{2bb}{bg2b!70!black}
\setcolor[derive]{2s} {bg2!30!white}
\setcolor[derive]{2ss}{bg2s!30!white}

\setcolor[limit=0.59]{3}{4DAF4A}
\setcolor[derive]{3b} {bg3!70!black}
\setcolor[derive]{3bb}{bg3b!70!black}
\setcolor[derive]{3s} {bg3!30!white}
\setcolor[derive]{3ss}{bg3s!30!white}

\setcolor{4}{984EA3}
\setcolor[derive]{4b} {bg4!70!black}
\setcolor[derive]{4bb}{bg4b!70!black}
\setcolor[derive]{4s} {bg4!30!white}
\setcolor[derive]{4ss}{bg4s!30!white}

\setcolor{5}{E41A1C}
\setcolor[derive]{5b} {bg5!70!black}
\setcolor[derive]{5bb}{bg5b!70!black}
\setcolor[derive]{5s} {bg5!30!white}
\setcolor[derive]{5ss}{bg5s!30!white}

\setcolor{6}{FFFF33}
\setcolor[derive]{6b} {bg6!70!black}
\setcolor[derive]{6bb}{bg6b!70!black}
\setcolor[derive]{6s} {bg6!30!white}
\setcolor[derive]{6ss}{bg6s!30!white}

\setcolor{7}{A65628}
\setcolor[derive]{7b} {bg7!70!black}
\setcolor[derive]{7bb}{bg7b!70!black}
\setcolor[derive]{7s} {bg7!30!white}
\setcolor[derive]{7ss}{bg7s!30!white}



\newnote[semitones=10, style/.append style={fill=bg1bb, text=fg1bb,}]{*1bb}
\newnote[semitones=11, style/.append style={fill=bg1b,  text=fg1b, }]{*1b}
\newnote[semitones=0,  style/.append style={fill=bg1,   text=fg1,  }]{*1}
\newnote[semitones=1,  style/.append style={fill=bg1s,  text=fg1s, }]{*1S}
\newnote[semitones=2,  style/.append style={fill=bg1ss, text=fg1ss,}]{*1SS}

\newnote[semitones=0,  style/.append style={fill=bg2bb, text=fg2bb,}]{*2bb}
\newnote[semitones=1,  style/.append style={fill=bg2b,  text=fg2b, }]{*2b}
\newnote[semitones=2,  style/.append style={fill=bg2,   text=fg2,  }]{*2}
\newnote[semitones=3,  style/.append style={fill=bg2s,  text=fg2s, }]{*2S}
\newnote[semitones=4,  style/.append style={fill=bg2ss, text=fg2ss,}]{*2SS}

\newnote[semitones=2,  style/.append style={fill=bg3bb, text=fg3bb,}]{*3bb}
\newnote[semitones=3,  style/.append style={fill=bg3b,  text=fg3b, }]{*3b}
\newnote[semitones=4,  style/.append style={fill=bg3,   text=fg3,  }]{*3}
\newnote[semitones=5,  style/.append style={fill=bg3s,  text=fg3s, }]{*3S}
\newnote[semitones=6,  style/.append style={fill=bg3ss, text=fg3ss,}]{*3SS}

\newnote[semitones=3,  style/.append style={fill=bg4bb, text=fg4bb,}]{*4bb}
\newnote[semitones=4,  style/.append style={fill=bg4b,  text=fg4b, }]{*4b}
\newnote[semitones=5,  style/.append style={fill=bg4,   text=fg4,  }]{*4}
\newnote[semitones=6,  style/.append style={fill=bg4s,  text=fg4s, }]{*4S}
\newnote[semitones=7,  style/.append style={fill=bg4ss, text=fg4ss,}]{*4SS}

\newnote[semitones=5,  style/.append style={fill=bg5bb, text=fg5bb,}]{*5bb}
\newnote[semitones=6,  style/.append style={fill=bg5b,  text=fg5b, }]{*5b}
\newnote[semitones=7,  style/.append style={fill=bg5,   text=fg5,  }]{*5}
\newnote[semitones=8,  style/.append style={fill=bg5s,  text=fg5s, }]{*5S}
\newnote[semitones=9,  style/.append style={fill=bg5ss, text=fg5ss,}]{*5SS}

\newnote[semitones=7,  style/.append style={fill=bg6bb, text=fg6bb,}]{*6bb}
\newnote[semitones=8,  style/.append style={fill=bg6b,  text=fg6b, }]{*6b}
\newnote[semitones=9,  style/.append style={fill=bg6,   text=fg6,  }]{*6}
\newnote[semitones=10, style/.append style={fill=bg6s,  text=fg6s, }]{*6S}
\newnote[semitones=11, style/.append style={fill=bg6ss, text=fg6ss,}]{*6SS}

\newnote[semitones=9,  style/.append style={fill=bg7bb, text=fg7bb,}]{*7bb}
\newnote[semitones=10, style/.append style={fill=bg7b,  text=fg7b, }]{*7b}
\newnote[semitones=11, style/.append style={fill=bg7,   text=fg7,  }]{*7}
\newnote[semitones=0,  style/.append style={fill=bg7s,  text=fg7s, }]{*7S}
\newnote[semitones=1,  style/.append style={fill=bg7ss, text=fg7ss,}]{*7SS}

%%%	           M/m              A/d                   
%%%		----------	----------	|	----------	----------
%%%	00	C	P1	Dbb	d2	|	C	P8	B#	A7
%%%	01	Db	m2	C#	A1	|	B	M7	Cb	d8
%%%	02	D	M2	Ebb	d3	|	Bb	m7	A#	A6
%%%	03	Eb	m3	D#	A2	|	A	M6	Bbb	d7
%%%	04	E	M3	Fb	d4	|	Ab	m6	G#	A5
%%%	05	F	P4	E#	A3	|	G	P5	Abb	d6
%%%	06	F#	A4	Gb	d5	|	Gb	d5	F#	A4
%%%	06	Gb	d5	F#	A4	|	F#	A4	Gb	d5
%%%	07	G	P5	Abb	d6	|	F	P4	E#	A3
%%%	08	Ab	m6	G#	A5	|	E	M3	Fb	d4
%%%	09	A	M6	Bbb	d7	|	Eb	m3	D#	A2
%%%	10	Bb	m7	A#	A6	|	D	M2	Ebb	d3
%%%	11	B	M7	Cb	d8	|	Db	m2	C#	A1
%%%	12	C	P8	B#	A7	|	C	P1	Dbb	d2

\copynote[text=d1,      lower text=A8,] {*1b} {d1}
\copynote[text=1,       lower text=, style/.append style={rectangle} ] {*1}  {1}
\copynote[text=1,       lower text=8, ] {1}  {8}
\copynote[text=A1,      lower text=d8,] {*1S} {A1}

\copynote[text=d2,      lower text=A7,] {*2bb}{d2}
\copynote[text=\mflat*{2}, lower text=M7, ] {*2b} {b2}
\copynote[text=m2,      lower text=7, ] {*2b} {m2}
\copynote[text=2,       lower text=m7,] {*2}  {2}
\copynote[text=A2,      lower text=d7,] {*2S} {A2}
%
\copynote[text=\mflat*{9},  lower text=, ] {*2b} {b9}
\copynote[text=m9,       lower text=, ] {*2b} {m9}
\copynote[text=9,        lower text= ,] {*2}  {9}
\copynote[text=A9,       lower text=, ] {*2S} {A9}
\copynote[text=\msharp*{9}, lower text=, ] {*2S} {S9}


\copynote[text=d3,      lower text=A6,] {*3bb}{d3}
\copynote[text=\mflat*{3},lower text=M6,] {*3b} {b3}
\copynote[text=\mflat*{3},lower text=M6,] {*3b} {b3}
\copynote[text=m3,      lower text=6, ] {*3b} {m3}
\copynote[text=3,       lower text=m6,] {*3}  {3}
\copynote[text=A3,      lower text=d6,] {*3S} {A3}
\copynote[text=\msharp*{3},lower text=d6,] {*3S} {S3}


\copynote[text=d4,      lower text=A5,] {*4b} {d4}
\copynote[text=4,       lower text=5, ] {*4}  {4}
\copynote[text=A4,      lower text=d5,] {*4S} {A4}
\copynote[text=A4,      lower text=d5, highlight] {*4S} {A4*}
%
\copynote[text=\mflat*{11},  lower text=, ] {*4b} {b11}
\copynote[text=m11,       lower text=, ] {*4b} {m11}
\copynote[text=11,        lower text= ,] {*4}  {11}
\copynote[text=A11,       lower text=, ] {*4S} {A11}
\copynote[text=\msharp*{11},  lower text=, ] {*4S} {S11}

\copynote[text=\mflat*{5}, lower text=\msharp*{4},] {*5b} {b5}
\copynote[text=d5,      lower text=A4,] {*5b} {d5}
\copynote[text=5,       lower text=4, ] {*5}  {5}
\copynote[text=A5,      lower text=d4,] {*5S} {A5}
\copynote[text=\msharp*{5}, lower text=d4,] {*5S} {S5}

\copynote[text=d6,      lower text=A3,] {*6bb}{d6}
\copynote[text=\mflat*{6}, lower text=M3, ] {*6b} {b6}
\copynote[text=m6,      lower text=3, ] {*6b} {m6}
\copynote[text=6,       lower text=m3,] {*6}  {6}
\copynote[text=A6,      lower text=m3,] {*6S} {A6}
%
\copynote[text=\mflat*{13}, lower text=, ] {*6b} {b13}
\copynote[text=m13,       lower text=, ] {*6b} {m13}
\copynote[text=13,        lower text= ,] {*6}  {13}
\copynote[text=A13,       lower text=, ] {*6S} {A13}
\copynote[text=\msharp*{13},lower text=, ] {*6S} {S13}

\copynote[text=\mdoubleflat*{7},      lower text=A2,] {*7bb}{bb7}
\copynote[text=d7,      lower text=A2,] {*7bb}{d7}
\copynote[text=\mflat*{7}, lower text=M2,] {*7b} {b7}
\copynote[text=m7,      lower text=2, ] {*7b} {m7}
\copynote[text=7,       lower text=m2,] {*7}  {7}
\copynote[text=A7,      lower text=d2,] {*7S} {A7}
%% Nonsense \copynote[text=\msharp*{7},      lower text=d2,] {*7S} {S7}

\copynote[text=\pCb,    lower text=\pB, ] {d1} {Cb}
\copynote[text=\pC,     lower text=,    ] {1}  {C}
\copynote[text=\pCS,    lower text=\pDb,] {A1} {CS}

\copynote[text=\pDb,    lower text=\pCS,] {m2} {Db}
\copynote[text=\pD,     lower text=,    ] {2}  {D}
\copynote[text=\pDS,    lower text=\pEb,] {A2} {DS}

\copynote[text=\pEb,    lower text=\pDS,] {m3} {Eb}
\copynote[text=\pE,     lower text=,    ] {3}  {E}
\copynote[text=\pES,    lower text=\pF, ] {A3} {ES}

\copynote[text=\pFb,    lower text=\pE, ] {d4} {Fb}
\copynote[text=\pF,     lower text=,    ] {4}  {F}
\copynote[text=\pFS,    lower text=\pGb,] {A4} {FS}

\copynote[text=\pGb,    lower text=\pFS,] {d5} {Gb}
\copynote[text=\pG,     lower text=,    ] {5}  {G}
\copynote[text=\pGS,    lower text=\pAb,] {A5} {GS}

\copynote[text=\pAb,    lower text=\pGS,] {m6} {Ab}
\copynote[text=\pA,     lower text=,    ] {6}  {A}
\copynote[text=\pAS,    lower text=\pBb,] {A6} {AS}

\copynote[text=\pBb,    lower text=\pAS,] {m7} {Bb}
\copynote[text=\pB,     lower text=,    ] {7}  {B}
\copynote[text=\pBS,    lower text=\pC, ] {A7} {BS}
